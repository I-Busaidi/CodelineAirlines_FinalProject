@page "/AddAirplanes"
@inject IAirportService airportService
@inject IAirplaneSpecService airplaneSpecService
@inject NavigationManager NavigationManager
@using MudBlazor

<MudContainer Class="form-container">
    <MudGrid>
        <!-- Select Airplane Model -->
        <MudItem xs="12">
            <MudSelect T="string" Label="Select Airplane Model" FullWidth="true" @bind-Value="selectedModel" Required="true">
                @foreach (var model in airplaneModels)
                {
                    <MudSelectItem Value="@model.Model">@model.Model</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <!-- Select Airport -->
        <MudItem xs="12">
            <MudSelect T="int" Label="Select Airport" FullWidth="true" @bind-Value="selectedAirportId" Required="true">
                @foreach (var airport in airports)
                {
                    <MudSelectItem Value="@airport.AirportId">@airport.AirportName (@airport.City)</MudSelectItem>
                }
            </MudSelect>
        </MudItem>

        <!-- Manufacture Date -->
        <MudItem xs="12">
            <MudDatePicker Label="Manufacture Date" @bind-Date="manufactureDate" Variant="Variant.Outlined" Required="true" />
        </MudItem>
    </MudGrid>

    <!-- Add Airplane Buttons -->
    <MudGrid Class="mt-4">
        <MudItem xs="12">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="manageAirplanes" FullWidth="true">
                Add Airplane
            </MudButton>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private string selectedModel;
    private int selectedAirportId;
    private DateTime? manufactureDate = null;

    private List<AirportOutputDTO> airports = new List<AirportOutputDTO>();
    private List<AirplaneSpecOutputDTO> airplaneModels = new List<AirplaneSpecOutputDTO>();

    protected override void OnInitialized()
    {
        try
        {
            // Fetch all airports
            airports = airportService.GetAllAirports();

            // Fetch all airplane models
            airplaneModels = airplaneSpecService.GetModelsSpecs();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Error initializing data: " + ex.Message);
        }
    }
    // Return to the manageAirplanes page
    private void manageAirplanes()
    {
        NavigationManager.NavigateTo("/manageAirplanes");
    }
}

<style>
    .form-container {
        padding: 20px;
        background-color: #f9f9f9;
        border-radius: 8px;
    }

    .mt-4 {
        margin-top: 20px;
    }
</style>
